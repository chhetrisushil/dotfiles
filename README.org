* dotfiles
:PROPERTIES:
:CUSTOM_ID: dotfiles
:END:
This repo is just to store my dot config files for example .vimrc etc

reference: https://github.com/sagarrakshe/dotvim, https://github.com/sagarrakshe/dotfiles

* Setup
:PROPERTIES:
:CUSTOM_ID: setup
:END:
Run the following command to set up the environment

with =wget=:

#+begin_src bash
sh -c "$(wget https://raw.githubusercontent.com/chhetrisushil/dotfiles/master/setup.sh -O -)"
#+end_src

OR

with =curl=:

#+begin_src bash
sh -c "$(curl -fsSL -H 'Cache-Control: no-cache, no-store' https://raw.githubusercontent.com/chhetrisushil/dotfiles/master/setup.sh)"
#+end_src

/NOTE: Run the following command to see verbose logs/

#+begin_src bash
curl -sL -H 'Cache-Control: no-cache, no-store' https://raw.githubusercontent.com/chhetrisushil/dotfiles/master/setup.sh | sh -s -- -vvv
#+end_src

--------------

** Autolock 'alock'
:PROPERTIES:
:CUSTOM_ID: autolock-alock
:END:
install alock from https://github.com/chhetrisushil/alock

** Drop-down terminal 'yakuake'
:PROPERTIES:
:CUSTOM_ID: drop-down-terminal-yakuake
:END:
install 'yakuake' for drop-down terminal

** mpv for mac os
:PROPERTIES:
:CUSTOM_ID: mpv-for-mac-os
:END:
- Install =mpv= for mac os using brew run the following command =brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/master/Formula/mpv.rb=

** Nerd font
:PROPERTIES:
:CUSTOM_ID: nerd-font
:END:
- Install nerd font from https://github.com/ryanoasis/nerd-fonts#font-installation
- Install nerd devicons for fancy nerd tree icons https://github.com/ryanoasis/vim-devicons#installation
- Install =Meslo LG S Italic for Powerline Nerd Font.ttf= font to the system for linux
- For linux place the font in =/usr/share/font/= folder and rebuild the font cache =fc-cache -f -v=
- For Mac install font from =./mac-Meslo-Nerd-Font/Meslo LG S Italic for Powerline Nerd Font.ttf=

** Powerline font for 'agnoster' zsh theme and vim-airline
:PROPERTIES:
:CUSTOM_ID: powerline-font-for-agnoster-zsh-theme-and-vim-airline
:END:
- Install powerline font from https://github.com/powerline/fonts
- set the font =Meslo LG S DZ for Powerline= in the terminal (/italic/ preferably)

** cobalt2 zsh-theme for iterm
:PROPERTIES:
:CUSTOM_ID: cobalt2-zsh-theme-for-iterm
:END:
- Follow the instruction in this repo https://github.com/wesbos/Cobalt2-iterm

** Instant markdown for instant preview
:PROPERTIES:
:CUSTOM_ID: instant-markdown-for-instant-preview
:END:
- Follow install instructions from https://github.com/suan/vim-instant-markdown

** Install =ack-grep= for ack.vim support
:PROPERTIES:
:CUSTOM_ID: install-ack-grep-for-ack.vim-support
:END:
- Run command =sudo apt-get install ack-grep= to install ack. /symlink ack-grep to ack if needed/ =ln -s /usr/bin/ack-grep /usr/bin/ack=

** For fish like auto completion in zsh
:PROPERTIES:
:CUSTOM_ID: for-fish-like-auto-completion-in-zsh
:END:
- Install zsh-autosuggestions from https://github.com/zsh-users/zsh-autosuggestions
- Run the following command =git clone git://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions=
- Plugin is already mapped in =.zshrc= file

** Install =xcape= to map Caps_Lock to ctrl (on long press) and esc (on tap) on Archlinux
:PROPERTIES:
:CUSTOM_ID: install-xcape-to-map-caps_lock-to-ctrl-on-long-press-and-esc-on-tap-on-archlinux
:END:
- Try =sudo pacman -S xcape= first (archlinux)
- Install xcape from https://github.com/alols/xcape before setting up the environment

** Install =xmodmap= to map Tab to Hyper_L (on long press) and Tab (on tap) on Archlinux
:PROPERTIES:
:CUSTOM_ID: install-xmodmap-to-map-tab-to-hyper_l-on-long-press-and-tab-on-tap-on-archlinux
:END:
- Try =sudo pacman -S xorg-xmodmap= first (archlinux)
- Install xmodmap before setting up the environment
- This also maps backslash to Hyper_R (on long press) and backslash (on tap)

** Install =HyperKey.app= to map Caps_Lock to ctrl (on long press) and esc (on tap) on MacOS
:PROPERTIES:
:CUSTOM_ID: install-hyperkey.app-to-map-caps_lock-to-ctrl-on-long-press-and-esc-on-tap-on-macos
:END:
- Install =HyperKey.app= from https://hyperkey.app/

** Install =jsctags= for javascript ctags
:PROPERTIES:
:CUSTOM_ID: install-jsctags-for-javascript-ctags
:END:
- =jsctags= for ctags generation for vim read more at https://www.npmjs.com/package/jsctags
- Run the following command to create tags file =find <path to directory containing javascript files> -type f -iregex ".*\.js$" -not -path "./node_modules/*" -exec jsctags {} -f \; | sed '/^$/d' | sort > tags=
- set the tags option to the tag file in local.vim e.g. ~set tags+=./tags~

** Install the_silver_searcher
:PROPERTIES:
:CUSTOM_ID: install-the_silver_searcher
:END:
- Install =the_silver_searcher= which is aliased to command =ag= for searching
- =ag= is also used in vim config for inside vim searching
- Repo for the_silver_searcher https://github.com/ggreer/the_silver_searcher

** Install =elm-format=
:PROPERTIES:
:CUSTOM_ID: install-elm-format
:END:
- Install =elm-format= by running command =npm i -g elm-format=
- Repo for =elm-format= as reference: https://github.com/avh4/elm-format
- =elm-format= is enabled for vim on save

** Install =elm=
:PROPERTIES:
:CUSTOM_ID: install-elm
:END:
- Install =elm= by running =npm i -g elm=
- Elm reference site https://guide.elm-lang.org/
- Introduciton to Elm https://www.gitbook.com/book/evancz/an-introduction-to-elm/details

** Neovim setup
:PROPERTIES:
:CUSTOM_ID: neovim-setup
:END:
- Copy =nvim= folder to =~/.config=
- NOTE: vim's =.vim= folder and =.vimrc= should alredy be setup before copying nvim folder

** Install =bat= (alternate to =cat= command)
:PROPERTIES:
:CUSTOM_ID: install-bat-alternate-to-cat-command
:END:
- Install =bat= it's a good alternate to =cat= command for file content viewing

** Install =lazydocker=
:PROPERTIES:
:CUSTOM_ID: install-lazydocker
:END:
- Install =lazydocker= for visual docker container management

** Install =lazygit= A simple terminal UI for git commands
:PROPERTIES:
:CUSTOM_ID: install-lazygit-a-simple-terminal-ui-for-git-commands
:END:
- github: https://github.com/jesseduffield/lazygit

** Install =peco=
:PROPERTIES:
:CUSTOM_ID: install-peco
:END:
- interactvie filtering command tool https://github.com/peco/peco

** Install =z= directory jumper
:PROPERTIES:
:CUSTOM_ID: install-z-directory-jumper
:END:
- github: https://github.com/rupa/z
- path on arch linux =/usr/share/z/z.sh=

** Install =trayer= lightweight system tray
:PROPERTIES:
:CUSTOM_ID: install-trayer-lightweight-system-tray
:END:
- documentation:
  http://manpages.ubuntu.com/manpages/bionic/man1/trayer.1.html
- =yay -Syu trayer=

** Neovim plugins
:PROPERTIES:
:CUSTOM_ID: neovim-plugins
:END:
- Telescope: fuzzy finder
  https://github.com/nvim-telescope/telescope.nvim
- github copilot: https://github.com/github/copilot.vim
- which-key: https://github.com/folke/which-key.nvim
- toggleterm: https://github.com/akinsho/toggleterm.nvim
- nvim-tree (file explorer): https://github.com/kyazdani42/nvim-tree.lua
- nvim-web-devicons: https://github.com/kyazdani42/nvim-web-devicons
- neovim setup https://github.com/craftzdog/dotfiles-public
- neovim setup video: https://www.youtube.com/watch?v=FW2X1CXrU1w&t=741s&ab_channel=devaslife
- ranger in neovim: https://github.com/kevinhwang91/rnvimr

** Install =exa= modern replacement for ls
:PROPERTIES:
:CUSTOM_ID: install-exa-modern-replacement-for-ls
:END:
- website: https://the.exa.website/
- github: https://github.com/ogham/exa

** Install =fd= an alternative to =find=
:PROPERTIES:
:CUSTOM_ID: install-fd-an-alternative-to-find
:END:
- github: https://github.com/sharkdp/fd

** Install =lvim= Lunar vim
:PROPERTIES:
:CUSTOM_ID: install-lvim-lunar-vim
:END:
- github: https://github.com/LunarVim/LunarVim
- Documentation: https://www.lunarvim.org

** Install =dmenu= application launcher
:PROPERTIES:
:CUSTOM_ID: install-dmenu-application-launcher
:END:
- =yay -Syu dmenu=
- github: https://github.com/stilvoid/dmenu
- suckless documentation: https://tools.suckless.org/dmenu/

** Install =polybar= status bar
:PROPERTIES:
:CUSTOM_ID: install-polybar-status-bar
:END:
- =yay -Syu polybar=
- github: https://github.com/polybar/polybar
- documentation: https://polybar.readthedocs.io/en/stable/,
  https://polybar.github.io/

** Install =betterlockscreen= for screen lock on arch linux
:PROPERTIES:
:CUSTOM_ID: install-betterlockscreen-for-screen-lock-on-arch-linux
:END:
- =yay -Syu betterlockscreen=
- github: https://github.com/betterlockscreen/betterlockscreen

** How to configure/customize Neovim
:PROPERTIES:
:CUSTOM_ID: how-to-configurecustomize-neovim
:END:
- github: https://github.com/LunarVim/Neovim-from-scratch

** Steps to launch =kanata= on start-up MacOS
:PROPERTIES:
:CUSTOM_ID: steps-to-launch-kanata-on-start-up-macos
:END:
- Run the script located in =scripts/bin/kanata_launch_macos= located in the =dotfiles= folder
- Add =kanata= binary to =system settings -> privacy & security -> input monitoring=
- Reboot the system

*** Linux
:PROPERTIES:
:CUSTOM_ID: linux
:END:
- Run =sudo groupadd uinput= to create a =input= user group.
- Run =sudo usermod -aG input,uinput $(whoami)= to add the user to the usergroups.

*NOTES:*
- Before setting up vim copy =.vim= folder to =~/.vim=
- Install =typescript= =dtsm= =typings= by running =sudo npm install -g typescript dtsm typings= for typescripts plugin to work properly
- location of most of the config is HOME directory (i.e. ~/) except for .gitconfig which resides in the project directory
- location for =.ackrc= is home directory (i.e. ~/) e.g. =~/.ackrc=
- Keep colors folder inside =~/.vim= folder - Create a ".tags" folder in home directory
- Run npm install after installing tern plugin - Run git submodule update --init --recursive in vim-jsbeautify plugin folder
- Map actionscript.dict in .vimrc properly - Path to xmonad.desktop =/usr/share/xsessions/xmonad.desktop=, update the =Exec= property value to the starter script
- Ultisnips to work create a directory =mkdir -p ~/.vim/ftdetect= and run this command =ln -s ~/.vim/bundle/ultisnips/ftdetect/* ~/.vim/ftdetect/= - =jsctags= for ctags generation for vim read more at https://www.npmjs.com/package/jsctags
- use https://github.com/gpakosz/.tmux for tmux configuration
- set locale to utf8 in linux for powerline fonts to work properly in tmux, run =sudo localectl set-locale LANG="en_IN.utf8"=, choose utf8 locale by running =localectl list-locales=. Once the locale is set a reboot is required.
- Install =eslint=, run =npm install -g eslint= - =.tmux/= folder is customized copy of =oh-my-tmux=
- to enable undercurl set the following in =.tmux.conf.local= *Copy with #!important*
  #+begin_src bash
  set -g default-terminal 'alacritty' #!important
  set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm' #!important
  set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' #!important
  #+end_src
- install =reattach-to-user-namespace= in macos for tmux and clipboard binding and =xclip= for Linux
- install =clipit= for clipboard management (paste from history) for linux
- install =pywal= for setting wallpaper and corresponding theme
- install =nerd-fonts-complete= from AUR for arch linux for nerd font support (powerline support)
- terminator config path =.config/terminator/config= - if =kanata= does't work refer https://github.com/jtroo/kanata as there might be a need to add the user to =uinput= group.
- copy =.cargo/config= before setting up neovim. =lua/json5= neovim plugin needs this file.
- install =debugpy= to debug python in neovim =pip3 install debugpy=
- install =delve= through mason plugin (Mason dap)
- install =mermaid cli= =npm install -g @mermaid-js/mermaid-cli=
- install =magick cli= (imagemagick) =brew install imagemagick=
- install =plantuml cli= =brew install plantuml= before that install =graphviz=, it's a plantuml dependency =brew install graphviz=
